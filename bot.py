from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor

TOKEN = "7731694868:AAGZvbAApn7hG7Xl-NnR1YMIfinKCTgtjvo"
ADMIN_ID = @ibeloborodove  # –¢–≤–æ–π Telegram ID

bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –ü–∞–º—è—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
messages = []

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class Form(StatesGroup):
    anonymity = State()
    restaurant = State()
    department = State()
    problem = State()

# –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ê–Ω–æ–Ω–∏–º–Ω–æ", "–ù–µ –∞–Ω–æ–Ω–∏–º–Ω–æ")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ?", reply_markup=markup)
    await Form.anonymity.set()

# –í—ã–±–æ—Ä –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
@dp.message_handler(state=Form.anonymity)
async def process_anonymity(message: types.Message, state: FSMContext):
    await state.update_data(anonymity=message.text)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ë–ö", "–ù–µ–≤—Å–∫–∏–π", "–ù–µ–∫—Ä–∞—Å–æ–≤–∞")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:", reply_markup=markup)
    await Form.restaurant.set()

# –í—ã–±–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
@dp.message_handler(state=Form.restaurant)
async def process_restaurant(message: types.Message, state: FSMContext):
    await state.update_data(restaurant=message.text)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("–ö—É—Ö–Ω—è", "–ë–∞—Ä", "–ó–∞–ª")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:", reply_markup=markup)
    await Form.department.set()

# –í—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
@dp.message_handler(state=Form.department)
async def process_department(message: types.Message, state: FSMContext):
    await state.update_data(department=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç:", reply_markup=types.ReplyKeyboardRemove())
    await Form.problem.set()

# –ü—Ä–∏—ë–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler(state=Form.problem)
async def process_problem(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    anonymity = user_data.get('anonymity')
    restaurant = user_data.get('restaurant')
    department = user_data.get('department')
    problem_text = message.text

    if anonymity == "–ù–µ –∞–Ω–æ–Ω–∏–º–Ω–æ":
        user_name = message.from_user.full_name
        user_id = message.from_user.id
    else:
        user_name = "-"
        user_id = "-"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—ë –≤–º–µ—Å—Ç–µ
    record = f"üë§ –ê–Ω–æ–Ω–∏–º–Ω–æ: {anonymity}\nüè¢ –†–µ—Å—Ç–æ—Ä–∞–Ω: {restaurant}\nüîß –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {department}\nüìù –ò–º—è: {user_name}\nüÜî Telegram ID: {user_id}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {problem_text}\n{'-'*30}"
    messages.append(record)

    await message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ ‚úÖ")
    await state.finish()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler(commands=['–æ—Ç—á—ë—Ç'])
async def report(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        if messages:
            report_text = "\n\n".join(messages)
            await message.answer(f"–í—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{report_text}")
        else:
            await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
@dp.message_handler(commands=['–æ—á–∏—Å—Ç–∏—Ç—å'])
async def clear_messages(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        messages.clear()
        await message.answer("–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã.")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
